# Copyright (c) 2013, Ruslan Baratov
# All rights reserved.

cmake_minimum_required(VERSION 2.8.12)

include(ExternalProject) # ExternalProject_Add

# Scheme for download boost and install header-only libraries (no build step)

list(APPEND CMAKE_MODULE_PATH "@HUNTER_ROOT@/Source/cmake/modules")

include(hunter_assert_lists_equal)
include(hunter_status_debug)
include(hunter_test_string_not_empty)

hunter_status_debug("Scheme: url_sha1_boost")

# Check preconditions
hunter_test_string_not_empty("@HUNTER_ROOT@")
hunter_test_string_not_empty("@HUNTER_BASE@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_BASENAME@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_URL@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_SHA1@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_DOWNLOAD_DIR@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_SOURCE_DIR@")
hunter_test_string_not_empty("@HUNTER_PACKAGE_INSTALL_DIR@")
if(MSVC)
  hunter_test_string_not_empty("@HUNTER_MSVC_ARCH@")
endif()

hunter_assert_lists_equal(@HUNTER_DOWNLOAD_SCHEME_VARIANTS@)

set_directory_properties(
    PROPERTIES
    EP_BASE
    "@HUNTER_BASE@"
)

set(
    boost_libs
    atomic
    chrono
    context
    coroutine
    date_time
    exception
    filesystem
    graph
    graph_parallel
    iostreams
    locale
    log
    math
    mpi
    program_options
    python
    random
    regex
    serialization
    signals
    system
    test
    thread
    timer
    wave
)

foreach(x ${boost_libs})
  list(APPEND boost_list "--without-${x}")
endforeach()

if(XCODE_VERSION)
  # remove xcode environment variables
  set(env_cmd . "@HUNTER_ROOT@/Source/scripts/clear-all.sh")
elseif(MSVC)
  ### copy/paste from openssl_windows scheme --
  get_filename_component(VS_DEV_PATH "${CMAKE_LINKER}" ABSOLUTE)
  get_filename_component(VS_DEV_PATH "${VS_DEV_PATH}" DIRECTORY)
  get_filename_component(VS_DEV_PATH "${VS_DEV_PATH}/.." ABSOLUTE)

  find_program(VC_VARS_BAT vcvarsall.bat HINTS "${VS_DEV_PATH}")

  if(NOT VC_VARS_BAT)
    message(FATAL_ERROR "`vcvarsall.bat` not found in `${VS_DEV_PATH}`")
  endif()
  ### -- end
  set(env_cmd "${VC_VARS_BAT}" "@HUNTER_MSVC_ARCH@")
else()
  set(env_cmd "")
endif()

if(MSVC)
  set(install_cmd "b2")
  set(bootstrap_cmd "bootstrap.bat")
else()
  set(install_cmd "./b2")
  set(bootstrap_cmd "./bootstrap.sh")
endif()

ExternalProject_Add(
    @HUNTER_PACKAGE_BASENAME@
    URL
    @HUNTER_PACKAGE_URL@
    URL_HASH
    SHA1=@HUNTER_PACKAGE_SHA1@
    DOWNLOAD_DIR
    "@HUNTER_PACKAGE_DOWNLOAD_DIR@"
    SOURCE_DIR
    "@HUNTER_PACKAGE_SOURCE_DIR@"
    INSTALL_DIR
    "@HUNTER_PACKAGE_INSTALL_DIR@"
        # not used, just avoid creating Install/<name> empty directory
    CONFIGURE_COMMAND
    ${env_cmd}
    COMMAND
    ${bootstrap_cmd}
    BUILD_COMMAND
    "${CMAKE_COMMAND}" -E echo "build skipped"
    BUILD_IN_SOURCE
    1
    INSTALL_COMMAND
    ${install_cmd}
    --layout=tagged
    -d0
    install
    ${boost_list}
    "--prefix=@HUNTER_PACKAGE_INSTALL_DIR@"
)
